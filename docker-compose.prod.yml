name: curlme
services:
  database:
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $POSTGRES_USER -d $POSTGRES_DB || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    image: postgres:15
    container_name: curlme-database
    restart: always
    env_file:
      - .env
    volumes:
      - database-data:/data/db
    networks:
      - database-network

  api:
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost:8000/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s
    build:
      context: ./apps/api
      dockerfile: Dockerfile
    container_name: curlme-api
    restart: always
    env_file:
      - .env
    environment:
      - NODE_ENV=production
    depends_on:
      database:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - curlme-network
      - database-network

  redis:
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    image: redis:latest
    container_name: curlme-redis
    restart: always
    networks:
      - database-network

  caddy:
    depends_on:
      api:
        condition: service_started
    build:
      context: ./caddy
      dockerfile: Dockerfile
    container_name: curlme-caddy
    restart: always
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - caddy-data:/data
      - caddy-config:/config
    networks:
      - curlme-network
    extra_hosts:
      - 'host.docker.internal:host-gateway'

volumes:
  database-data:
  caddy-data:
  caddy-config:

networks:
  curlme-network:
  database-network:
